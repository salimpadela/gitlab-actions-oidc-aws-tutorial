name: vpc-ci-dev-create
on:
  push:
    branches:
      - dev
    paths:
      - "iac/terraform/vpc/*"
      - "iac/terraform/vpc/dev/**"
env:
  # TF_LOG: INFO
  AWS_ACCOUNT_NUMBER: <<AWS_ACCOUNT_NUMBER>>
defaults:
  run:
    shell: bash
    working-directory: ./iac/terraform/vpc
permissions:
  contents: read
jobs:
  deploy-dev:
    runs-on: ubuntu-latest
    # These permissions are needed to interact with GitHub's OIDC Token endpoint. New
    permissions:
      id-token: write
      contents: read
    steps:
      - name: "Checkout"
        uses: actions/checkout@v3
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: us-east-1
          role-to-assume: arn:aws:iam::${{env.AWS_ACCOUNT_NUMBER}}:role/github-actions-role
          role-session-name: Session-GitHubActions
      - name: Setup Terraform with specified version on the runner
        uses: hashicorp/setup-terraform@v2
        # with:
        #   terraform_version: 1.4.6
      - name: Terraform format
        id: fmt
        run: terraform fmt -check
      - name: Terraform init
        id: init
        run: terraform init
      - name: Terraform validate
        id: validate
        run: terraform validate
      - name: Terraform plan
        id: plan
        run: terraform plan -var-file=./dev/terraform.tfvars -no-color -input=false
        continue-on-error: true
      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1
      - name: Terraform Apply
        run: terraform apply -var-file=./dev/terraform.tfvars -auto-approve -input=false
